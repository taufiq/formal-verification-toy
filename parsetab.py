
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNMENTleftIMPLIESleftBOOLEAN_OPERATORnonassocCOMPARATORleftPLUSMINUSleftTIMESrightUMINUSANNOTATION ASSIGNMENT ASSUME BOOLEAN_OPERATOR BOOL_TYPE COMMA COMPARATOR ELSE FALSE FUNCTION IF IMPLIES INT_TYPE LBRACE LOOP_ANNOTATION LPAREN MINUS NUMBER PLUS POST_ANNOTATION PRE_ANNOTATION RBRACE RETURN RPAREN THEN TIMES TRUE TRUTH_VALUES VARIABLE WHILEprogram : statement_liststatement_list : statement\n                    | statement statement_liststatement : assignment\n             | expression\n             | annotation\n             | while_loop\n             | if_then_else\n             | assumption\n             | declaration\n             | function_declaration\n             | return_statementfunction_declaration : FUNCTION VARIABLE LPAREN parameter_list RPAREN LBRACE statement_list RBRACEreturn_statement : RETURN expressionparameter_list : declaration\n                    | declaration COMMA parameter_listwhile_loop : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEdeclaration : BOOL_TYPE VARIABLEdeclaration : INT_TYPE VARIABLEannotation : PRE_ANNOTATION expression\n                  | POST_ANNOTATION expression\n                  | ANNOTATION expression\n                  | LOOP_ANNOTATION expressionassumption : ASSUME expressionassignment : VARIABLE ASSIGNMENT expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression TIMES expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : TRUE\n                | FALSEexpression : VARIABLEexpression : MINUS expression %prec UMINUSexpression : expression COMPARATOR expressionexpression : expression BOOLEAN_OPERATOR expressionexpression : expression IMPLIES expressionif_then_else : IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE'
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[13,13,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,39,39,-30,-31,-32,39,39,39,39,39,48,49,50,39,39,39,39,39,39,39,39,-34,-33,-20,-21,-22,-23,39,39,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,13,13,13,-17,-13,13,-38,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[15,15,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,15,15,-30,-31,-32,15,15,15,15,45,46,15,15,15,15,15,15,15,15,15,-34,-33,-20,-21,-22,-23,15,15,-24,-18,-19,62,-14,-26,-27,-28,-35,-36,-37,-25,-29,15,15,15,-17,-13,15,-38,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,29,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[16,16,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,16,16,-30,-31,-32,16,16,16,16,16,16,16,16,16,16,16,16,16,-34,-33,-20,-21,-22,-23,16,16,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,16,16,16,-17,-13,16,-38,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,29,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[17,17,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,17,17,-30,-31,-32,17,17,17,17,17,17,17,17,17,17,17,17,17,-34,-33,-20,-21,-22,-23,17,17,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,17,17,17,-17,-13,17,-38,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,29,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[18,18,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,18,18,-30,-31,-32,18,18,18,18,18,18,18,18,18,18,18,18,18,-34,-33,-20,-21,-22,-23,18,18,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,18,18,18,-17,-13,18,-38,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,67,68,73,75,79,80,82,],[14,14,-4,32,-6,-7,-8,-9,-10,-11,-12,-33,14,14,-30,-31,-32,14,14,14,14,14,14,14,14,14,14,14,14,14,-34,-33,32,32,32,32,32,14,14,32,-18,-19,32,-26,-27,-28,32,32,32,32,-29,32,32,14,14,14,-17,-13,14,-38,]),'PRE_ANNOTATION':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[19,19,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,19,19,19,-17,-13,19,-38,]),'POST_ANNOTATION':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[20,20,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,20,20,20,-17,-13,20,-38,]),'ANNOTATION':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[21,21,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,21,21,21,-17,-13,21,-38,]),'LOOP_ANNOTATION':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[22,22,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,22,22,22,-17,-13,22,-38,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[23,23,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,23,23,23,-17,-13,23,-38,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[24,24,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,24,24,24,-17,-13,24,-38,]),'ASSUME':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[25,25,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,25,25,25,-17,-13,25,-38,]),'BOOL_TYPE':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,62,67,68,70,73,75,79,80,82,],[26,26,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,26,26,26,26,26,-17,-13,26,-38,]),'INT_TYPE':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,62,67,68,70,73,75,79,80,82,],[27,27,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,27,27,27,27,27,-17,-13,27,-38,]),'FUNCTION':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[28,28,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,28,28,28,-17,-13,28,-38,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,16,17,18,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,67,68,73,75,79,80,82,],[29,29,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,29,29,29,-17,-13,29,-38,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,30,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,75,79,82,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-3,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,-17,-13,-38,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,16,17,18,30,38,39,41,42,43,44,47,48,49,51,52,53,54,55,56,57,58,59,71,72,75,77,79,81,82,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-33,-30,-31,-32,-3,-34,-33,-20,-21,-22,-23,-24,-18,-19,-14,-26,-27,-28,-35,-36,-37,-25,-29,75,76,-17,79,-13,82,-38,]),'PLUS':([5,13,16,17,18,38,39,40,41,42,43,44,47,51,52,53,54,55,56,57,58,59,60,61,],[31,-33,-30,-31,-32,-34,-33,31,31,31,31,31,31,31,-26,-27,-28,31,31,31,31,-29,31,31,]),'TIMES':([5,13,16,17,18,38,39,40,41,42,43,44,47,51,52,53,54,55,56,57,58,59,60,61,],[33,-33,-30,-31,-32,-34,-33,33,33,33,33,33,33,33,33,33,-28,33,33,33,33,-29,33,33,]),'COMPARATOR':([5,13,16,17,18,38,39,40,41,42,43,44,47,51,52,53,54,55,56,57,58,59,60,61,],[34,-33,-30,-31,-32,-34,-33,34,34,34,34,34,34,34,-26,-27,-28,None,34,34,34,-29,34,34,]),'BOOLEAN_OPERATOR':([5,13,16,17,18,38,39,40,41,42,43,44,47,51,52,53,54,55,56,57,58,59,60,61,],[35,-33,-30,-31,-32,-34,-33,35,35,35,35,35,35,35,-26,-27,-28,-35,-36,35,35,-29,35,35,]),'IMPLIES':([5,13,16,17,18,38,39,40,41,42,43,44,47,51,52,53,54,55,56,57,58,59,60,61,],[36,-33,-30,-31,-32,-34,-33,36,36,36,36,36,36,36,-26,-27,-28,-35,-36,-37,36,-29,36,36,]),'ASSIGNMENT':([13,],[37,]),'RPAREN':([16,17,18,38,39,40,48,49,52,53,54,55,56,57,59,60,61,65,66,74,],[-30,-31,-32,-34,-33,59,-18,-19,-26,-27,-28,-35,-36,-37,-29,63,64,69,-15,-16,]),'COMMA':([48,49,66,],[-18,-19,70,]),'LBRACE':([63,64,69,78,],[67,68,73,80,]),'ELSE':([76,],[78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,3,67,68,73,80,],[2,30,71,72,77,81,]),'statement':([0,3,67,68,73,80,],[3,3,3,3,3,3,]),'assignment':([0,3,67,68,73,80,],[4,4,4,4,4,4,]),'expression':([0,3,14,15,19,20,21,22,25,29,31,32,33,34,35,36,37,45,46,67,68,73,80,],[5,5,38,40,41,42,43,44,47,51,52,53,54,55,56,57,58,60,61,5,5,5,5,]),'annotation':([0,3,67,68,73,80,],[6,6,6,6,6,6,]),'while_loop':([0,3,67,68,73,80,],[7,7,7,7,7,7,]),'if_then_else':([0,3,67,68,73,80,],[8,8,8,8,8,8,]),'assumption':([0,3,67,68,73,80,],[9,9,9,9,9,9,]),'declaration':([0,3,62,67,68,70,73,80,],[10,10,66,10,10,66,10,10,]),'function_declaration':([0,3,67,68,73,80,],[11,11,11,11,11,11,]),'return_statement':([0,3,67,68,73,80,],[12,12,12,12,12,12,]),'parameter_list':([62,70,],[65,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',69),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',73),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser.py',74),
  ('statement -> assignment','statement',1,'p_statement','parser.py',81),
  ('statement -> expression','statement',1,'p_statement','parser.py',82),
  ('statement -> annotation','statement',1,'p_statement','parser.py',83),
  ('statement -> while_loop','statement',1,'p_statement','parser.py',84),
  ('statement -> if_then_else','statement',1,'p_statement','parser.py',85),
  ('statement -> assumption','statement',1,'p_statement','parser.py',86),
  ('statement -> declaration','statement',1,'p_statement','parser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','parser.py',88),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',89),
  ('function_declaration -> FUNCTION VARIABLE LPAREN parameter_list RPAREN LBRACE statement_list RBRACE','function_declaration',8,'p_function_declaration','parser.py',93),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',97),
  ('parameter_list -> declaration','parameter_list',1,'p_parameter_list','parser.py',101),
  ('parameter_list -> declaration COMMA parameter_list','parameter_list',3,'p_parameter_list','parser.py',102),
  ('while_loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_loop',7,'p_while_loop','parser.py',109),
  ('declaration -> BOOL_TYPE VARIABLE','declaration',2,'p_bool_declaration','parser.py',114),
  ('declaration -> INT_TYPE VARIABLE','declaration',2,'p_int_declaration','parser.py',123),
  ('annotation -> PRE_ANNOTATION expression','annotation',2,'p_annotation','parser.py',133),
  ('annotation -> POST_ANNOTATION expression','annotation',2,'p_annotation','parser.py',134),
  ('annotation -> ANNOTATION expression','annotation',2,'p_annotation','parser.py',135),
  ('annotation -> LOOP_ANNOTATION expression','annotation',2,'p_annotation','parser.py',136),
  ('assumption -> ASSUME expression','assumption',2,'p_assumption','parser.py',151),
  ('assignment -> VARIABLE ASSIGNMENT expression','assignment',3,'p_assignment','parser.py',161),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','parser.py',171),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',179),
  ('expression -> expression TIMES expression','expression',3,'p_expression_times','parser.py',187),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parenthesis_expr','parser.py',195),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser.py',199),
  ('expression -> TRUE','expression',1,'p_expression_bool','parser.py',203),
  ('expression -> FALSE','expression',1,'p_expression_bool','parser.py',204),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',209),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','parser.py',219),
  ('expression -> expression COMPARATOR expression','expression',3,'p_formula_comparison','parser.py',226),
  ('expression -> expression BOOLEAN_OPERATOR expression','expression',3,'p_formula_logic_op','parser.py',234),
  ('expression -> expression IMPLIES expression','expression',3,'p_formula_implies','parser.py',242),
  ('if_then_else -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_then_else',11,'p_if_then_else','parser.py',250),
]

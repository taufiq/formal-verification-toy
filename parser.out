Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> assignment
Rule 2     start -> expression
Rule 3     start -> annotation
Rule 4     start -> assumption
Rule 5     start -> declaration
Rule 6     declaration -> BOOL_TYPE VARIABLE
Rule 7     declaration -> INT_TYPE VARIABLE
Rule 8     annotation -> ANNOTATION expression
Rule 9     assumption -> ASSUME expression
Rule 10    assignment -> VARIABLE ASSIGNMENT expression
Rule 11    expression -> expression PLUS expression
Rule 12    expression -> expression MINUS expression
Rule 13    expression -> expression TIMES expression
Rule 14    expression -> LPAREN expression RPAREN
Rule 15    expression -> NUMBER
Rule 16    expression -> VARIABLE
Rule 17    expression -> MINUS expression
Rule 18    expression -> expression COMPARATOR expression
Rule 19    expression -> expression BOOLEAN_OPERATOR expression
Rule 20    expression -> expression IMPLIES expression
Rule 21    expression -> IF expression THEN assignment ELSE assignment
Rule 22    expression -> WHILE expression DO assignment STOP

Terminals, with rules where they appear

ANNOTATION           : 8
ASSIGNMENT           : 10
ASSUME               : 9
BOOLEAN_OPERATOR     : 19
BOOL_TYPE            : 6
COMPARATOR           : 18
DO                   : 22
ELSE                 : 21
IF                   : 21
IMPLIES              : 20
INT_TYPE             : 7
LPAREN               : 14
MINUS                : 12 17
NUMBER               : 15
PLUS                 : 11
RPAREN               : 14
STOP                 : 22
THEN                 : 21
TIMES                : 13
VARIABLE             : 6 7 10 16
WHILE                : 22
error                : 

Nonterminals, with rules where they appear

annotation           : 3
assignment           : 1 21 21 22
assumption           : 4
declaration          : 5
expression           : 2 8 9 10 11 11 12 12 13 13 14 17 18 18 19 19 20 20 21 22
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . assignment
    (2) start -> . expression
    (3) start -> . annotation
    (4) start -> . assumption
    (5) start -> . declaration
    (10) assignment -> . VARIABLE ASSIGNMENT expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP
    (8) annotation -> . ANNOTATION expression
    (9) assumption -> . ASSUME expression
    (6) declaration -> . BOOL_TYPE VARIABLE
    (7) declaration -> . INT_TYPE VARIABLE

    VARIABLE        shift and go to state 7
    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    ANNOTATION      shift and go to state 13
    ASSUME          shift and go to state 14
    BOOL_TYPE       shift and go to state 15
    INT_TYPE        shift and go to state 16

    start                          shift and go to state 1
    assignment                     shift and go to state 2
    expression                     shift and go to state 3
    annotation                     shift and go to state 4
    assumption                     shift and go to state 5
    declaration                    shift and go to state 6

state 1

    (0) S' -> start .



state 2

    (1) start -> assignment .

    $end            reduce using rule 1 (start -> assignment .)


state 3

    (2) start -> expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    $end            reduce using rule 2 (start -> expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22


state 4

    (3) start -> annotation .

    $end            reduce using rule 3 (start -> annotation .)


state 5

    (4) start -> assumption .

    $end            reduce using rule 4 (start -> assumption .)


state 6

    (5) start -> declaration .

    $end            reduce using rule 5 (start -> declaration .)


state 7

    (10) assignment -> VARIABLE . ASSIGNMENT expression
    (16) expression -> VARIABLE .

    ASSIGNMENT      shift and go to state 23
    PLUS            reduce using rule 16 (expression -> VARIABLE .)
    MINUS           reduce using rule 16 (expression -> VARIABLE .)
    TIMES           reduce using rule 16 (expression -> VARIABLE .)
    COMPARATOR      reduce using rule 16 (expression -> VARIABLE .)
    BOOLEAN_OPERATOR reduce using rule 16 (expression -> VARIABLE .)
    IMPLIES         reduce using rule 16 (expression -> VARIABLE .)
    $end            reduce using rule 16 (expression -> VARIABLE .)


state 8

    (17) expression -> MINUS . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 24

state 9

    (14) expression -> LPAREN . expression RPAREN
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 26

state 10

    (15) expression -> NUMBER .

    PLUS            reduce using rule 15 (expression -> NUMBER .)
    MINUS           reduce using rule 15 (expression -> NUMBER .)
    TIMES           reduce using rule 15 (expression -> NUMBER .)
    COMPARATOR      reduce using rule 15 (expression -> NUMBER .)
    BOOLEAN_OPERATOR reduce using rule 15 (expression -> NUMBER .)
    IMPLIES         reduce using rule 15 (expression -> NUMBER .)
    $end            reduce using rule 15 (expression -> NUMBER .)
    RPAREN          reduce using rule 15 (expression -> NUMBER .)
    THEN            reduce using rule 15 (expression -> NUMBER .)
    DO              reduce using rule 15 (expression -> NUMBER .)
    ELSE            reduce using rule 15 (expression -> NUMBER .)
    STOP            reduce using rule 15 (expression -> NUMBER .)


state 11

    (21) expression -> IF . expression THEN assignment ELSE assignment
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 27

state 12

    (22) expression -> WHILE . expression DO assignment STOP
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 28

state 13

    (8) annotation -> ANNOTATION . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 29

state 14

    (9) assumption -> ASSUME . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 30

state 15

    (6) declaration -> BOOL_TYPE . VARIABLE

    VARIABLE        shift and go to state 31


state 16

    (7) declaration -> INT_TYPE . VARIABLE

    VARIABLE        shift and go to state 32


state 17

    (11) expression -> expression PLUS . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 33

state 18

    (12) expression -> expression MINUS . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 34

state 19

    (13) expression -> expression TIMES . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 35

state 20

    (18) expression -> expression COMPARATOR . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 36

state 21

    (19) expression -> expression BOOLEAN_OPERATOR . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 37

state 22

    (20) expression -> expression IMPLIES . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 38

state 23

    (10) assignment -> VARIABLE ASSIGNMENT . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . expression MINUS expression
    (13) expression -> . expression TIMES expression
    (14) expression -> . LPAREN expression RPAREN
    (15) expression -> . NUMBER
    (16) expression -> . VARIABLE
    (17) expression -> . MINUS expression
    (18) expression -> . expression COMPARATOR expression
    (19) expression -> . expression BOOLEAN_OPERATOR expression
    (20) expression -> . expression IMPLIES expression
    (21) expression -> . IF expression THEN assignment ELSE assignment
    (22) expression -> . WHILE expression DO assignment STOP

    LPAREN          shift and go to state 9
    NUMBER          shift and go to state 10
    VARIABLE        shift and go to state 25
    MINUS           shift and go to state 8
    IF              shift and go to state 11
    WHILE           shift and go to state 12

    expression                     shift and go to state 39

state 24

    (17) expression -> MINUS expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    PLUS            reduce using rule 17 (expression -> MINUS expression .)
    MINUS           reduce using rule 17 (expression -> MINUS expression .)
    TIMES           reduce using rule 17 (expression -> MINUS expression .)
    COMPARATOR      reduce using rule 17 (expression -> MINUS expression .)
    BOOLEAN_OPERATOR reduce using rule 17 (expression -> MINUS expression .)
    IMPLIES         reduce using rule 17 (expression -> MINUS expression .)
    $end            reduce using rule 17 (expression -> MINUS expression .)
    RPAREN          reduce using rule 17 (expression -> MINUS expression .)
    THEN            reduce using rule 17 (expression -> MINUS expression .)
    DO              reduce using rule 17 (expression -> MINUS expression .)
    ELSE            reduce using rule 17 (expression -> MINUS expression .)
    STOP            reduce using rule 17 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! COMPARATOR      [ shift and go to state 20 ]
  ! BOOLEAN_OPERATOR [ shift and go to state 21 ]
  ! IMPLIES         [ shift and go to state 22 ]


state 25

    (16) expression -> VARIABLE .

    PLUS            reduce using rule 16 (expression -> VARIABLE .)
    MINUS           reduce using rule 16 (expression -> VARIABLE .)
    TIMES           reduce using rule 16 (expression -> VARIABLE .)
    COMPARATOR      reduce using rule 16 (expression -> VARIABLE .)
    BOOLEAN_OPERATOR reduce using rule 16 (expression -> VARIABLE .)
    IMPLIES         reduce using rule 16 (expression -> VARIABLE .)
    $end            reduce using rule 16 (expression -> VARIABLE .)
    RPAREN          reduce using rule 16 (expression -> VARIABLE .)
    THEN            reduce using rule 16 (expression -> VARIABLE .)
    DO              reduce using rule 16 (expression -> VARIABLE .)
    ELSE            reduce using rule 16 (expression -> VARIABLE .)
    STOP            reduce using rule 16 (expression -> VARIABLE .)


state 26

    (14) expression -> LPAREN expression . RPAREN
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22


state 27

    (21) expression -> IF expression . THEN assignment ELSE assignment
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    THEN            shift and go to state 41
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22


state 28

    (22) expression -> WHILE expression . DO assignment STOP
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    DO              shift and go to state 42
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22


state 29

    (8) annotation -> ANNOTATION expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    $end            reduce using rule 8 (annotation -> ANNOTATION expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22


state 30

    (9) assumption -> ASSUME expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    $end            reduce using rule 9 (assumption -> ASSUME expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22


state 31

    (6) declaration -> BOOL_TYPE VARIABLE .

    $end            reduce using rule 6 (declaration -> BOOL_TYPE VARIABLE .)


state 32

    (7) declaration -> INT_TYPE VARIABLE .

    $end            reduce using rule 7 (declaration -> INT_TYPE VARIABLE .)


state 33

    (11) expression -> expression PLUS expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    PLUS            reduce using rule 11 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 11 (expression -> expression PLUS expression .)
    COMPARATOR      reduce using rule 11 (expression -> expression PLUS expression .)
    BOOLEAN_OPERATOR reduce using rule 11 (expression -> expression PLUS expression .)
    IMPLIES         reduce using rule 11 (expression -> expression PLUS expression .)
    $end            reduce using rule 11 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 11 (expression -> expression PLUS expression .)
    THEN            reduce using rule 11 (expression -> expression PLUS expression .)
    DO              reduce using rule 11 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 11 (expression -> expression PLUS expression .)
    STOP            reduce using rule 11 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 19

  ! TIMES           [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! COMPARATOR      [ shift and go to state 20 ]
  ! BOOLEAN_OPERATOR [ shift and go to state 21 ]
  ! IMPLIES         [ shift and go to state 22 ]


state 34

    (12) expression -> expression MINUS expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    PLUS            reduce using rule 12 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 12 (expression -> expression MINUS expression .)
    COMPARATOR      reduce using rule 12 (expression -> expression MINUS expression .)
    BOOLEAN_OPERATOR reduce using rule 12 (expression -> expression MINUS expression .)
    IMPLIES         reduce using rule 12 (expression -> expression MINUS expression .)
    $end            reduce using rule 12 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 12 (expression -> expression MINUS expression .)
    THEN            reduce using rule 12 (expression -> expression MINUS expression .)
    DO              reduce using rule 12 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 12 (expression -> expression MINUS expression .)
    STOP            reduce using rule 12 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 19

  ! TIMES           [ reduce using rule 12 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! COMPARATOR      [ shift and go to state 20 ]
  ! BOOLEAN_OPERATOR [ shift and go to state 21 ]
  ! IMPLIES         [ shift and go to state 22 ]


state 35

    (13) expression -> expression TIMES expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    PLUS            reduce using rule 13 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 13 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 13 (expression -> expression TIMES expression .)
    COMPARATOR      reduce using rule 13 (expression -> expression TIMES expression .)
    BOOLEAN_OPERATOR reduce using rule 13 (expression -> expression TIMES expression .)
    IMPLIES         reduce using rule 13 (expression -> expression TIMES expression .)
    $end            reduce using rule 13 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 13 (expression -> expression TIMES expression .)
    THEN            reduce using rule 13 (expression -> expression TIMES expression .)
    DO              reduce using rule 13 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 13 (expression -> expression TIMES expression .)
    STOP            reduce using rule 13 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! COMPARATOR      [ shift and go to state 20 ]
  ! BOOLEAN_OPERATOR [ shift and go to state 21 ]
  ! IMPLIES         [ shift and go to state 22 ]


state 36

    (18) expression -> expression COMPARATOR expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    COMPARATOR      reduce using rule 18 (expression -> expression COMPARATOR expression .)
    IMPLIES         reduce using rule 18 (expression -> expression COMPARATOR expression .)
    $end            reduce using rule 18 (expression -> expression COMPARATOR expression .)
    RPAREN          reduce using rule 18 (expression -> expression COMPARATOR expression .)
    THEN            reduce using rule 18 (expression -> expression COMPARATOR expression .)
    DO              reduce using rule 18 (expression -> expression COMPARATOR expression .)
    ELSE            reduce using rule 18 (expression -> expression COMPARATOR expression .)
    STOP            reduce using rule 18 (expression -> expression COMPARATOR expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    BOOLEAN_OPERATOR shift and go to state 21

  ! PLUS            [ reduce using rule 18 (expression -> expression COMPARATOR expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression COMPARATOR expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression COMPARATOR expression .) ]
  ! BOOLEAN_OPERATOR [ reduce using rule 18 (expression -> expression COMPARATOR expression .) ]
  ! COMPARATOR      [ shift and go to state 20 ]
  ! IMPLIES         [ shift and go to state 22 ]


state 37

    (19) expression -> expression BOOLEAN_OPERATOR expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

    COMPARATOR      reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    BOOLEAN_OPERATOR reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    IMPLIES         reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    $end            reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    RPAREN          reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    THEN            reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    DO              reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    ELSE            reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    STOP            reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19

  ! PLUS            [ reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression BOOLEAN_OPERATOR expression .) ]
  ! COMPARATOR      [ shift and go to state 20 ]
  ! BOOLEAN_OPERATOR [ shift and go to state 21 ]
  ! IMPLIES         [ shift and go to state 22 ]


state 38

    (20) expression -> expression IMPLIES expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for COMPARATOR resolved as shift
  ! shift/reduce conflict for BOOLEAN_OPERATOR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
    $end            reduce using rule 20 (expression -> expression IMPLIES expression .)
    RPAREN          reduce using rule 20 (expression -> expression IMPLIES expression .)
    THEN            reduce using rule 20 (expression -> expression IMPLIES expression .)
    DO              reduce using rule 20 (expression -> expression IMPLIES expression .)
    ELSE            reduce using rule 20 (expression -> expression IMPLIES expression .)
    STOP            reduce using rule 20 (expression -> expression IMPLIES expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22

  ! PLUS            [ reduce using rule 20 (expression -> expression IMPLIES expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression IMPLIES expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression IMPLIES expression .) ]
  ! COMPARATOR      [ reduce using rule 20 (expression -> expression IMPLIES expression .) ]
  ! BOOLEAN_OPERATOR [ reduce using rule 20 (expression -> expression IMPLIES expression .) ]
  ! IMPLIES         [ reduce using rule 20 (expression -> expression IMPLIES expression .) ]


state 39

    (10) assignment -> VARIABLE ASSIGNMENT expression .
    (11) expression -> expression . PLUS expression
    (12) expression -> expression . MINUS expression
    (13) expression -> expression . TIMES expression
    (18) expression -> expression . COMPARATOR expression
    (19) expression -> expression . BOOLEAN_OPERATOR expression
    (20) expression -> expression . IMPLIES expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for COMPARATOR resolved as shift
  ! shift/reduce conflict for BOOLEAN_OPERATOR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
    $end            reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .)
    ELSE            reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .)
    STOP            reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .)
    RPAREN          reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .)
    THEN            reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .)
    DO              reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    COMPARATOR      shift and go to state 20
    BOOLEAN_OPERATOR shift and go to state 21
    IMPLIES         shift and go to state 22

  ! PLUS            [ reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .) ]
  ! MINUS           [ reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .) ]
  ! TIMES           [ reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .) ]
  ! COMPARATOR      [ reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .) ]
  ! BOOLEAN_OPERATOR [ reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .) ]
  ! IMPLIES         [ reduce using rule 10 (assignment -> VARIABLE ASSIGNMENT expression .) ]


state 40

    (14) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    COMPARATOR      reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    BOOLEAN_OPERATOR reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    IMPLIES         reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 14 (expression -> LPAREN expression RPAREN .)
    STOP            reduce using rule 14 (expression -> LPAREN expression RPAREN .)


state 41

    (21) expression -> IF expression THEN . assignment ELSE assignment
    (10) assignment -> . VARIABLE ASSIGNMENT expression

    VARIABLE        shift and go to state 44

    assignment                     shift and go to state 43

state 42

    (22) expression -> WHILE expression DO . assignment STOP
    (10) assignment -> . VARIABLE ASSIGNMENT expression

    VARIABLE        shift and go to state 44

    assignment                     shift and go to state 45

state 43

    (21) expression -> IF expression THEN assignment . ELSE assignment

    ELSE            shift and go to state 46


state 44

    (10) assignment -> VARIABLE . ASSIGNMENT expression

    ASSIGNMENT      shift and go to state 23


state 45

    (22) expression -> WHILE expression DO assignment . STOP

    STOP            shift and go to state 47


state 46

    (21) expression -> IF expression THEN assignment ELSE . assignment
    (10) assignment -> . VARIABLE ASSIGNMENT expression

    VARIABLE        shift and go to state 44

    assignment                     shift and go to state 48

state 47

    (22) expression -> WHILE expression DO assignment STOP .

    PLUS            reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    MINUS           reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    TIMES           reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    COMPARATOR      reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    BOOLEAN_OPERATOR reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    IMPLIES         reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    $end            reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    RPAREN          reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    THEN            reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    DO              reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    ELSE            reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)
    STOP            reduce using rule 22 (expression -> WHILE expression DO assignment STOP .)


state 48

    (21) expression -> IF expression THEN assignment ELSE assignment .

    PLUS            reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    MINUS           reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    TIMES           reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    COMPARATOR      reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    BOOLEAN_OPERATOR reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    IMPLIES         reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    $end            reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    RPAREN          reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    THEN            reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    DO              reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    ELSE            reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)
    STOP            reduce using rule 21 (expression -> IF expression THEN assignment ELSE assignment .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for COMPARATOR in state 38 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_OPERATOR in state 38 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for COMPARATOR in state 39 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_OPERATOR in state 39 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 39 resolved as shift
